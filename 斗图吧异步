import requests
from queue import Queue
from lxml import etree
from urllib import request
import threading
import os
import re
class producer(threading.Thread):
    header = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 '
                      '(KHTML, like Gecko) Chrome/63.0.3239.26 Safari/537.36 Core/1.63.6726.400 QQBrowser/10.2.2265.400'
    }
    def __init__(self,page_queue,img_queue,*args,**kwargs):
        super(producer,self).__init__(*args,**kwargs)
        self.page_queue=page_queue
        self.img_queue=img_queue
    def run(self):
        while True:
            if self.page_queue.empty():
                break
            url=self.page_queue.get()
            self.get_page(url)
    def get_page(self,url):
        responce=requests.get(url=url,headers=self.header)
        text=responce.text
        html=etree.HTML(text)
        imgs=html.xpath("//div[@class='page-content text-center']//img[@class!='gif']")
        for img in imgs:
            img_url=img.get('data-original')
            alt=img.get('alt')
            alt=re.sub('r[\?？\.，。！!]','',alt)
            suffix=os.path.splitext(img_url)[1]
            filename=alt+suffix
            self.img_queue.put((img_url,filename))

class consumer(threading.Thread):
    def __init__(self,page_queue,img_queue,*args,**kwargs):
        super(consumer,self).__init__(*args,**kwargs)
        self.page_queue=page_queue
        self.img_queue=img_queue
    def run(self):
        while True:
            if self.img_queue.empty() and self.page_queue.empty():
                break
            img_url,filename=self.img_queue.get()
            request.urlretrieve(img_url, 'imgs/' + filename)
            print(filename +'下载成功')
def main():
    page_queue=Queue(100)
    img_queue=Queue(1000)
    for x in range(1,101):
        url="http://www.doutula.com/photo/list/?page=%d"%x
        page_queue.put(url)
    for x in range(5):
        t1=producer(page_queue,img_queue)
        t1.start()
    for x in range(5):
        t2=consumer(page_queue,img_queue)
        t2.start()
if __name__=="__main__":
    main()
